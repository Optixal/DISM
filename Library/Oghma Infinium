  _____   ______ _     _ _______ _______      _____ __   _ _______ _____ __   _ _____ _     _ _______
 |     | |  ____ |_____| |  |  | |_____|        |   | \  | |______   |   | \  |   |   |     | |  |  |
 |_____| |_____| |     | |  |  | |     |      __|__ |  \_| |       __|__ |  \_| __|__ |_____| |  |  |
                                                                                                     
 ______  __   __      _______ _     _ _______ _  _  _ __   _       _____  _______ __   _  ______     
 |_____]   \_/        |______ |_____| |_____| |  |  | | \  |      |_____] |_____| | \  | |  ____     
 |_____]    |         ______| |     | |     | |__|__| |  \_|      |       |     | |  \_| |_____|     





					  ___   ___  __ _____ 
					 |__ \ / _ \/_ | ____|
					    ) | | | || | |__  
					   / /| | | || |___ \ 
					  / /_| |_| || |___) |
					 |____|\___/ |_|____/ 
					                      
               _,.,  °             ,.  '                    ,. -,                    ,.,   '      
        ,.·'´  ,. ,  `;\ '         /   ';\              ,.·'´,    ,'\                 ;´   '· .,     
      .´   ;´:::::\`'´ \'\       ,'   ,'::'\         ,·'´ .·´'´-·'´::::\'             .´  .-,    ';\   
     /   ,'::\::::::\:::\:'     ,'    ;:::';'       ;    ';:::\::\::;:'             /   /:\:';   ;:'\' 
    ;   ;:;:-·'~^ª*';\'´       ';   ,':::;'        \·.    `·;:'-·'´              ,'  ,'::::'\';  ;::'; 
    ;  ,.-·:*'´¨'`*´\::\ '      ;  ,':::;' '         \:`·.   '`·,  '          ,.-·'  '·~^*'´¨,  ';::; 
   ;   ;\::::::::::::'\;'      ,'  ,'::;'              `·:'`·,   \'           ':,  ,·:²*´¨¯'`;  ;::'; 
   ;  ;'_\_:;:: -·^*';\      ;  ';_:,.-·´';\        ,.'-:;'  ,·\          ,'  / \::::::::';  ;::'; 
   ';    ,  ,. -·:*'´:\:'\°    ',   _,.-·'´:\:\  ,·'´     ,.·´:::'\        ,' ,'::::\·²*'´¨¯':,'\:;  
    \`*´ ¯\:::::::::::\;' '    \¨:::::::::::\';   \`*'´\::::::::;·'       \`¨\:::/          \::\'  
      \:::::\;::-·^*'´          '\;::_;:-·'´      \::::\:;:·´             '\::\;'            '\;'  '
        `*´¯                     '¨                 '`*'´                   `¨'                   

Install VMwaare dependencies by clicking on the bar below
Extract, execute vmware-install.pl
VM > Removable Devices > CD > Settings > Use ISO > Data: D > Ok > Packages > Finger and system-config-lvm-1.1.12-7.el6.noarch.rpm

passwd
grub-md5-crypt // Specify password for grub bootloader
gedit /boot/grub/grub.conf // Add the line "password --md5 <MD5 Hash>
updatedb // For "locate"
makewhatis // For "man -k"
echo "export EDITOR=/usr/bin/nano" >> ~/.bash_profile // To make nano the default text editor for visudo
echo "alias ll='ls -l --color=auto'" >> ~/.bash_rc // To make ll a command


ip a
ifconfig

cd
cd / // Top directory
cd ~ // Home directory
cd - // Back to prev directory
ls
ls -al // All, long or "ll"
ls -larS // All, sort smallest to biggest
ls /root /home // Lists multiple directories
ls -R // Lists everything on the system recursively
ls ut* -d // Lists the directories of everything starting with "ut"
ls u?t* -d // "?" acts as a single wildcard
ls [...] // "[...]" acts as a single specified wildcard, e.g. [abc]*, files that start with a, b, or c
ls [^...] // "[^...]" acts as a single specified "NOT" wildcard

pwd // Current directory
mv
cp
rm
rm -rf // Delete recursively, forced
rmdir // Same as rm -rf

makewhatis // Builds man database
man <command> // Manuals contain 8 chapters usually
man -k <command> // Searches command database for all commands containing -k (makewhatis must be executed first) (/ find, N next, Shift+N previous, Space next page, B previous page, Q quit)

info coreutils

ssh user@ip
ssh -X user@ip
who
whoami
scp file user@ip: // SSH copy
scp <user>@192.168.10.n:/etc/passwd Password.txt // Steal passwd

su user
su - user // changes to the user's home directory

Ctrl + S // Freeze shell
Ctrl + Q // Thaw shell

clear
Ctrl + L // Clear also

> // Redirects the terminal's output to a file (ls /root >> text.txt)
>> // Same as ">", but appends instead of overwrite

file // Shows type of file

// Content
cat // Displays all
head // Displays the first 10 lines of a file
head -n <Number of lines> // Displays the first n lines of a file
tail // Displays the last 10 lines of a file
tail -n <Number of lines> // Displays the last n lines of a file
tail -f // Very useful: shows the file and its updates in real-time
less // Displays, and allows you to scroll with up and down

which <Program> // Shows location of program
ldd // Lists a program's dependent directosries

updatedb // Indexes file system for locate
locate <keyword> // Searches db for keyword
find <search directory> -name -maxdepth -type -size -perm // On demand search of a file, no indexing required (Size types: +8c more than 8 bytes, -200k less than 200 kilobytes, 1M exactly 1 megabyte)

// Compresses a single file
gzip <file>
bzip2 <file>

// Extract/Decompress a single file
gunzip <file> // or gzip -d <file>
bunzip2 <file> // or bzip2 -d <file>
zcat

// Compresses a folder into a tarball
tar -cf <dest.tar> <src> // Compresses using tar, little compression. (Makes it bigger inface)
tar -czf <dest.tar.gz> <src> // Compresses using tar and gunzip. (Good)
tar -cjf <dest.tar.bz> <src> // Compresses using tar and bzip2 (Excellent)

// Extracts a tarball
tar -xf <file> // Extracts to current location
tar -xPf <file> // Extracts to root directory (preserves leading /)

// Inode (an address)
ls -i
stat <file>

// Hardlink and Softlinks (or Symbolic Link)
ln <src> <dest> // Creates a hardlink (for single files only), both files will point to the same inode, both files refer to the same physical file.
ln -s <src> <dest> // Creates a softlink (or symbolic link/shortcut/alias)

// Users & Passwords
cat /etc/passwd
cat /etc/shadow // $6 - SHA-512
grep <user> /etc/shadow
passwd <user> // Change a password for a user
passwd -l <user> // Locks the password for a user (prefixes !! infront of shadow entry
passwd -u <user> // Unlocks the password for a user
grep <user> /etc/shadow // Prints the entry containing "user"

echo "motd" > /etc/motd
id <user>
w
finger <user>
echo "plan" > ~/.plan
echo "plan" > /home/user/.plan

useradd <user> // Creates new user, with no password (!!, use passwd -u <user> to unlock)
useradd <user> -c <full name> -u <uid> -g <primary group> -G <secondary groups> -d <home dir> -s <default login shell> -p <encrypted password, use passwd> -e <expiry date, use chage>
useradd <user> -u <uid> -o // Creates new user with specified user ID, and forces it to be non-unique. (0 is root) If a user's uid is 8888, and is deleted, the next user who is created with uid of 8888, will inherit all the old user's files. 
usermod -c <full name> -u <uid> user // Modifies the user's full name, can be used with the flags in useradd
usermod -aG <group> <user> // Adds a user to a group
newgrp <group> // Makes the group the primary group for the user you are logged is as (the primary group gets associated with files created by the user)
userdel <user> -r -f // Delete and removes a user and the user's directory, forces it to delete the user.
chage <user> // Changes password expiry information

cd /etc/skel // Template for new users

cat /etc/group // Groups
id <user> // View user ID, group ID and groups ID's the user has and is in
groupadd <group> // Creates new group
chmod g+w <file> // Adds (+) the "write" (w) permission to the file's group
chmod o-r <file> // Removes (-) the "read" (r) permission from "others" (o)

ls /sbin // Lists all the commands that are available to root only
visudo // Edit sudoers file (add this to the end of the file: [<user> ALL = (ALL) ALL] or [<user> ALL = (ALL) NOPASSWD : ALL] to allow <user> to sudo commands
sudo <command>

gedit ~/.bashrc // Edits the startup commands made by the terminal (by defualt contains user specific alias)
alias <command>='<replacement>'

// 11 Nov 2015

history // Shows command history with their history ID
tail ~/.bash_history
!! // Executes the previous command executed
!<History ID> // Executes the command with a its specific history ID
nano ~/.bashrc // Add "export HISTFILE=" to remove all command history when you close terminal
rm ~/.bash_history // Must delete this along with "history -c" to remove history completely
history -c

nano ~/.bash_profile // Add "export EDITOR=/usr/bin/nano" to change the default text editor for visudo
source ~/.bash_profile // Reinitializes the ~/.bash_profile file

// Bash Variables

VARIABLE="<value>" // Declares and initializes a variable (case-sensitive)
echo $VARIABLE // Uses the variable
export <variable> // Converts a local variable into an environment variable (Local variable - available to the shell that created it, Environment variable - available to the shell and its processes created by it)
set // Lists local and environment variables
env // Lists environment variables

mkdir folder{01,02,03} // Brace expansion, creates folder01, folder02, folder03
$((<arithmetic expression>)) // Arithmetic expansion, calculates math expressions
echo file-$(date +%D) // Command substitution, allows you to put commands in other commands
echo file-`Date +%B` // Same as above, both produces file-11/29/15

export PS1='' // Customizes the prompt in the terminal
export PS2='' // Customizes the secondary prompt when using \ (\u - Username, \h - Hostname, \w - Fullpath)

touch /etc/nologin // Prevent remote connections

// 16 Nov 2015

uname -a // Prints all system information
date
// 3 ways to prevent special characters from interpretation by shell
\	// Protects next char
" "	// Protects string except for "$, !, ``"
' '	// Protects string

cd /tmp; ls // Executes multiple commands even if one fails
cd /tmp && ls // And, executes the next command only if the first passes
cd /tmp || ls // Or, executes the next command only if the first fails

ls /tmpy 2> errorfile > filelist // "2>" redirects error text (0 standard input, 1 standard output, 2 standard error)

cat /etc/passwd | grep optixal // Pipes the output from the first command to the second, in this case grep (globally search a regular expression print) finds optixal in /etc/passwd and prints the line containing it
cat /etc/passwd | sort // Sorts in alphabetical order

// 18 Nov 2015
#!/bin/bash // The "shebang"
chmod +x <script.sh> // Gives the script execute permission, so it can be executed
./script.sh // Executes script

chmod g+rw <file> // "+" is to append or add a permission, add read write to group
chmod g-rw <file> // "-" is to remove a permission, remove read write from group
chmod o=rw <file> // "=" is to replace the entire permission set, replaces others permission to read write 
chmod u=rwx,go= <file> // Permission only give to root, groups and others gets 0 permission
chmod a=rwx // Permission given to everyone (all)

chown <user>:<group> <file> // Changes the owner and the group of a file
chgrp <group> <file> // Changes the group of a file

Default permissions for a file created by a user is 664 (global default mode for files is 666, minus 002 from default user's umask) (global default mode for directories is 777)
Default permissions for a file created by root is 644 (global default mode for files is 666, minus 022 from default root's umask) (global default mode for directories is 777)
umask // Displays the current "unmask". The umask is the default permission settings to be deducted from files created. Specified in the /etc/bashrc file
umask 077 // Sets the umask to remove all permissions from groups and others

// 23 Nov 2015

chmod 4<3 digit permssion> // Set User ID (SUID) of the file. Files will run as the owner of the file.
chmod u+s <file>

chmod 2<3 digit permission> // Set Group ID (SGID) of the file/folder. Files will run as the group's owner of the file. Created files inside the folder will inherit the folder's group
chmod g+s <file>

chmod 1<3 digit permission> // Sticky bit for directories, allows only the owner of the file to delete it
chmod o+t <file>

-rwsrwxrwx // 4777 Normal case
-rwSrw-rw- // 4666 Abnormal case, when the execute is missing, pointless
-rwxrwsrwx // 2777 Normal case
-rw-rwSrw- // 2666 Abnormal case, when the execute is missing, pointless
-rwxrwxrwt // 1777 Normal case
-rw-rw-rwT // 1666 Abnormal case, when the execute is missing, pointless

setfacl -m u:joker:--- <file> // Sets file's access control list, modify, user:username:permissions, explicitly sets the permissions for a certain user
getfacl // Gets file's access control list

chattr +i /etc/shadow // Change file attributes, makes the shadow file immutable
lsattr // Lists file attributes





// EST Chapters Start
// 11 Jan 2016

df -h // Displays attached file systems (human-readable)
df // Displays attached file systems
mount
fdisk -l <device name> // Shows partition information of a device, if partition or disk missing, reboot

// Adding a new HDD
VM > Settings > Add > Hard Disk > SCSI > Create a new virtual disk > Change disk size and select "Store virtual disk as a single file" > Keep default name or rename > Finish > REBOOT

// Partitioning HDD
fdisk /dev/sdb
n // New partition
p // Primary partition, or "e" for extended
1 // Partition number
1 // Starting cylinder or default
+300M // Ending cylinder or default (last cylinder)
p // Prints partition table
w // Write

// Important fdisk commands
m // Shows help
p // Prints partition table
l // Lists known partition types
t // Change a partition's type

// 13 Jan 2016
dumpe2fs /dev/sdb1 // Displays information about a partition
cat /proc/meminfo // Displays memory information
cat /proc/swaps // Displays swap partitions

mkswap /dev/sdb1 // Make a partition a swap partition for virtual memory
swapon /dev/sdb1 // Enables the swap partition
nano /etc/fstab // Edits the File System Table to make it permanent

dd if=/dev/zero of=/swap bs=1024 count=100000 // Creates a swap file with 100000 counts of 1MB
mkswap /swap
swapon /swap
nano /etc/fstab

mount /dev/sdb2 /mnt/local_part/ // Mounts a partition to a folder (places the partition on top of the current folder)
mount 192.168.10.77:/share /root/Desktop/remote/ // Mounts a remote share to a folder
mount -o loop /root/Desktop/windows.iso /root/Desktop/remote

// 18 Jan 2016
e2label /dev/sdb2 // Check partition name
e2label /dev/sdb2 my_data // Renames partition to become "my_data"
dumpe2fs /dev/sdb2 | more // Displays information about a partition
gedit /etc/fstab
mount -a // Mounts all file systems mentioned in /etc/fstab
df -h // Displays disk space available in file system (human-readable)

// Fixing System Time Error
fsck // Yes
fsck // Yes
reboot

mount -o remount,rw /

// 20 Jan 2016 - Chapter 9
netstat 
hostname <name> // Changes hostname temporarily
nano /etc/sysconfig/network // Change hostname permanently
cat /etc/resolve.conf // DNS servers
cat /etc/sysctl.conf // Disable ping permanently
cat /etc/hosts // Hosts with custom names
nano /etc/sysconfig/network-scripts/ifcfg-<network> // Add new ip addresses to your NIC, "IPADDR2 = 192.168.10.<new>"

ping <host> -f -s 65507 // Where host can be a name specified in the hosts files, mostly for static ip addresses, -f for flood as fast as your com can, -s packet size. Use "sysctl -w net.ipv4.icmp_echo_ignore_all="1"" to disable replying to pings temporarily. Edit /etc/sysctl.conf to make permanent. Edit System > Administration > Firewall > ICMP Filter > Echo Request (ping) (checked) to block pings. (Different)
host <website> // Finds ip address of websites
traceroute <host>
mtr <host> // Live traceroute
route
arp -a // Shows mac addresses of devices that you connected to

mail -s -c -b -v <recipient> // subject, cc, bcc, verbose ... Ctrl-D to end
mail // <mail number>, d (delete), q (quit)

// Chapter 10
ll /boot // Shows kernel and other system files
gedit /boot/grub/grub.conf // Edit startup files, can duplicate the stanza to create your custom startup kernel. #hiddenmenu on the first stanza to get presented with options on boot, press escape if hiddenmenu is enabled

// Bypassing root password: select the custom startup kernel, press E, select kernel, press E, append "selinux=0 1", enter, b, passwd, init 6

// 25 Jan 2015
grub-md5-crypt // Specify password for grub bootloader
gedit /boot/grub/grub.conf // Add the line "password --md5 <MD5 Hash>

gedit /etc/inittab // The first init that will execute on startup (default: 5 - Xll [GUI], changing to 6 will destroy system)

chkconfig --list | less // Lists services that will enable on startup (for each init 0-6)
chkconfig --level 345 sshd off // Prevents the service sshd from turning on when starting up with init 5 (GUI), this adds a softlink to the /etc/rc5.d directory, explained later)

service sshd start
service sshd stop
service sshd restart
service sshd status

cd /etc/rc[0-6].d // Individual init config files, K - kill, S - start, S are the services that will be started when using that init, from smallest to biggest, software to hardware

uname -a
cat /proc/cpuinfo
cat /proc/meminfo

// Chapter 11 - 27 Jan 2016
// rpm installs packages one by one
cd /var/lib/rpm // Place where rpm list is stored
rpm -qa | less // Lists rpm programs installed

which gedit // Shows program location
rpm -qf /usr/bin/gedit // Shows rpm of program
rpm -e gedit-2.28.4-3.el6.i686 // Uninstall program
rpm -i /var/installer/Packages/gedit-2.28.4-3.el6.i686.rpm // Install program

rpm -ql <package> | less // Shows the files that an already installed rpm installs onto your computer
rpm -qpl <package>.rpm | less // Shows the files that a not installed rpm installs onto your computer

cd /etc/pki/rpm-gpg
rpm --import // Register a public key, which will be used to checksig
rpm --checksig <package>.rpm // Check signature of a package

// yum installs packages recursively (w/ dependencies)
gedit /etc/yum.repos.d/local.repo
/*
[local]
name=My local repo
baseurl=file:/var/installer
gpgcheck=0
enabled=0
*/
yum clean all
yum update // If error, rm the problematic repo in /etc/yum.repos.d/
rm /etc/yum.repos.d/packagekit-media.repo
yum clean all
yum update
yum install <package>

yum remove <package>
yum provides *<package>* // Finds a package
yum list // Lists all installed packages and available packages
yum list installed // Lists all installed packages

// repoforge.org
rpm -ivh rpmforge-release...el6
yum update

yum install vsftpd
service vsftpd start
chkconfig --list vsftpd
chkconfig vsftpd on
// System > Administrator > Firewall > Enable FTP
cd /var/ftp/pub

ftp <host>
cd pub
get <file> // Downloads to your home folder
bye

gedit /etc/vsftpd/vsftpd.conf // Modify FTP server configurations (anon_root=/var/ftp/pub [default landing directory for anon users])
serivce restart vsftpd

// 1 Feb 2016
at 3:00 pm // At 3pm, execute commands (Ctrl + D to EOT)
at now + 1 min // After 1min, execute commands (Ctrl + D to EOT)
atq // List queue
at -f /root/bin/at_script.sh now + 2 min

crontab -l // List the crontab file
crontab -e // Edit the crontab file (* * * * * export DISPLAY=:0.0 ; zenity --info --text "Hello" --title "Title") (every min, popup)
crontab -r // Remove the crontab file

cat /etc/ntp.conf // Time server config
System > Administrator > Date & Time > Sync > Tick all options (even advanced)

service start httpd
chkconfig httpd on
gedit /etc/httpd/conf/httpd.conf & // HTTPD config file

gedit /etc/exports // "/share *(rw,sync,root_squash"
mkdir /share
service nfs start
chkconfig nfs on
mkdir /root/Desktop/test_mount
mount localhost:/share /root/Desktop/test_mount
mount
umount /root/Desktop/test_mount

mount ip:/folder /your_folder

cd /share
touch file
service autofs status
mkdir /magicdir
echo "/magicdir /etc/auto.magicdir" >> /etc/auto.master
nano /etc/auto.magicdir // "data -ro,soft 127.0.0.1:/share"
service autofs reload
ll /magicdif/data

// Chapter 10 - 3 Feb 2016

wc /usr/share/dict/words // Word count - lines words characters
wc -l /usr/share/dict/words // Word count - lines

grep apple /usr/share/dict/words | wc -l // Finds "apple" (exact) and counts lines
grep -ci apple /usr/share/dict/words // Finds "apple" (ignore case) and counts lines
grep -v \# /etc/httpd/conf/httpd.conf // Finds all lines that does not have #, v - inverted
grep -r apple / // Finds "apple" recursively in root folder

sort

cut /etc/passwd -d : -f 1 // Splits a line, deliminator ":", return 1st part

paste // Combines files together

diff file1 file2 // Shows the difference between 2 text files

echo "hello" | tr abcdefghijklmnopqrstuvwxyz defghijklmnopqrstuvwxyzabc // Substitute each letter of hello with 3 characters up (Caesar cipher)
echo "good" | tr -d gd // Removes all letters "g" and "d"

// FILE LOCATIONS
/etc/services // Well known services
/etc/rc.d/init.d/service // Service scripts
/etc/rc.d/rc5.d // Start up services (K and S)

/etc/sysconfig/network // Global network configurations (networking, ipv6, hostname, nisdomain, gateway)
/etc/sysconfig/network-scripts/ifcfg-eth0 // ifconfig specific NIC permanent config
/etc/sysctl.conf // Packet forwading

/etc/hosts // Resolve host -> ip
/etc/resolv.conf // DNS server config

/etc/inittab // Specify 1-6

/etc/pki/r

/etc/ntp.conf // NTP config

/etc/exports // NFS shared

/etc/auto.master // Specifies custom auto mounts
/etc/auto.custom // Config for the custom auto mount

/var/spool/mail/username // Saved mail
/var/spool/cron // Crontab files
/var/lib/rpm // Installed software

/sbin/init // First process 

/boot/grub/grub.conf
/boot/linux-img
/lib/modules/ // Kernal modules 

/proc/cpuinfo
/proc/meminfo

// MOCK EXAM REVISION


 451  nano /etc/sysconfig/network
  452  source /etc/sysconfig/network
  453  gedit /etc/yum.repos.d/local.repo
  454  gedit /etc/yum.repos.d/local.repo 
  455  gedit /etc/yum.repos.d/local.repo &
  456  man 5 crontab
  457  gedit /etc/yum.repos.d/rpmfroge.repo &
  458  gedit /etc/yum.repos.d/rpmforge.repo &
  459  gedit /etc/yum.repos.d/local.repo &
  460  mkdir -p /share/nfs
  461  gedit /etc/exports
  462  service nfs start
  463  service nfs status
  464  chkconfig nfs
  465  chkconfig nfs status
  466  chkconfig --list nfs
  467  chkconfig nfs on
  468  touch /share/nfs/it_works_again
  469  mkdir test_dir
  470  mount 127.0.0.1:/share/nfs ./test_dir/
  471  df -h
  472  ls test_dir/
  473  nano /etc/fstab
  474  mkdir /remote
  475  gedit /etc/fstab
  476  mount -a
  477  mount
  478  ls /
  479  ls /remote
  480  gedit /etc/auto.master
  481  gedit /etc/auto.data
  482  gedit /etc/auto.misc
  483  gedit /etc/auto.data
  484  mkdir /nfsserver
  485  grep nfsserver /etc/auto.master
  486  cat /etc/auto.dada
  487  cat /etc/auto.data
  488  service autofs reload
  489  service autofs restart
  490  cd /nfsserver
  491  ls
  492  cd data
  493  ls
  499  rpm -i /var/installer/httpd.rpm
  500  yum install httpd






				  ___   ___  __   __  
				 |__ \ / _ \/_ | / /  
				    ) | | | || |/ /_  
				   / /| | | || | '_ \ 
				  / /_| |_| || | (_) |
				 |____|\___/ |_|\___/ 

               _,.,  °          .·¨'`;        ,.·´¨;\       ;'*¨'`·- .,              
        ,.·'´  ,. ,  `;\ '       ';   ;'\       ';   ;::\      \`:·-,. ,   '` ·.  '      
      .´   ;´:::::\`'´ \'\       ;   ;::'\      ,'   ;::';      '\:/   ;\:'`:·,  '`·, '   
     /   ,'::\::::::\:::\:'      ;  ;::_';,. ,.'   ;:::';°      ;   ;'::\;::::';   ;\   
    ;   ;:;:-·'~^ª*';\'´      .'     ,. -·~-·,   ;:::'; '      ;  ,':::;  `·:;;  ,':'\' 
    ;  ,.-·:*'´¨'`*´\::\ '     ';   ;'\::::::::;  '/::::;       ;   ;:::;    ,·' ,·':::; 
   ;   ;\::::::::::::'\;'       ;  ';:;\;::-··;  ;::::;        ;  ;:::;'  ,.'´,·´:::::; 
   ;  ;'_\_:;:: -·^*';\       ':,.·´\;'    ;' ,' :::/  '      ':,·:;::-·´,.·´\:::::;´'  
   ';    ,  ,. -·:*'´:\:'\°      \:::::\    \·.'::::;          \::;. -·´:::::;\;·´     
    \`*´ ¯\:::::::::::\;' '       \;:·´     \:\::';            \;'\::::::::;·´'        
      \:::::\;::-·^*'´                       `·\;'                `\;::-·´            
        `*´¯                                   '                                     

Port Numbers:
21, 20  FTP
22      SSH
23      Telnet
25      SMTP
53		DNS
80      HTTP
110     POP3
161     SNMP
443     HTTPS
3306    MySQL



// 20 Apr 2016

// Wireshark Filters
ip.src == 192.168.0.1
ip.dst == 192.168.0.6

// Input Output Graph (To see spikes in activity) (Download.pcap)
Statistics > IO Graph

// Applying Filters Based on a Packet
Select packet > Ethernet II > Right click either src or dst > Apply as filter > Selected

// Color Codes for Packets
View > Coloring Rules



// ICMP (usually ping)
Computer A sends PING REQUEST to Computer B
Computer B sends PING REPLY to Computer A

// Both request and reply have same sequence number

// ICMP Type Codes:
0     Echo Reply
3     Destination Unreachable
7     Destination Host Unknown
8     Echo Request

// Default Time To Live (TTL) for a Packet for OS's
Windows NT+:      128
Linux:            64
Windows 98:       32

// Eg. Pinging a Linux machine with a Windows 10 Computer (Testing OS using Ping's 

TTL.pcap)
ICMP Ping Request	TTL=128
ICMP Ping Reply		TTL=64



// TCP
Computer A sends SYN to Computer B
Computer B sends SYN/ACK to Computer A
Computer A sends ACK to Computer B
// HTTP
Computer A requests (HTTP GET) for web page
Computer B acknowledges and sends web page response

// Capturing TCP 3-way Handshake and HTTP POST
Filter: tcp.flags.ack == 1 || tcp.flags.syn == 1
Filter: http
Filter: http.request.method == POST
Edit > Find Packet > String > Filter: Dinosaur > Packet Bytes

// Reassemble the chopped up TCP packets into a full stream
// Right click on TCP packet > Follow TCP Stream

// Export HTTP files any images from a capture
// File > Export > Objects > HTTP



// TCP and UDP ports (0 - 65535)
21, 20	FTP
25	SMTP
80	HTTP
443	HTTPS

// netstat /?
// netstat -an      // All connections and listening ports with address:port
// netstat -ano     // Same as -an with owning process ID associated with each connection, 

works well with Processes (PID) in Task Manager to find which process has a connection
// netstat -anb     // Similar as -ano, showing executables associated with each connection



// FTP Server
Download Filezilla Server, connect to localhost, add user, add shared file
netstat -an // 0.0.0.0:21
Firewall > Exceptions > Add Port > 21

// FTP Client
ftp <ip>
user, pass
get <file>
// Find out username, password, filename, file contents
Wireshark > Filter > ftp
Wireshark > Filter > ftp-data // Content of files transferred
Filter Packet > String > Filter: "request: pass" > Packet List



// 25 Apr 2016

// telnet
Start service, add exception to firewall port 23
Insecure way of connecting to other computers, smth like ssh
Can capture using Wireshark

// putty.exe
Flexible and secure way of connecting to other computers

// MySQL
Can capture logins and viewing of tables, and even queries.

// ssh (Secure)
Port 22

// sftp (Secure)

// SMTP (using telnet)
// Sending
telnet <ip> <port (25 for SMTP server)>
helo <server>
mail from: <email>
rcpt to: <email>
data
<email msg>
.
quit

// Receive using POP3
telnet <ip> <port 110 for POP3>
user <email>
pass <pass>
list
retr <mail no.>



// 27 Apr 2016

cat /etc/NetworkManager/system-connections/connection

ifconfig eth0 192.168.6.11 netmask 255.255.0.0      // Temporarily sets ip for connection

nmcli connection down Wired\ connection\ 1          // Network Manager Command Line Interface
nmcli connection up Wired\ connection\ 1

arp -a

Wireshark capture a ping, filter arp, find packet with "ip is at mac"

// ARP Spoofing - on attacker machine:
arpspoof –i eth0 –t <victim ip> <ip ur impersonating>

// DNS
cat /etc/resolv.conf        // DNS server being used in Linux
ipconfig                    // DNS server being used in Windows

nslookup        // DNS lookup for Windows
dig             // DNS lookup for Linux
host            // DNS lookup for Linux
Filter in Wireshark dns, find response

ipconfig /displaydns      // DNS cache on Windows
ipconfig /flushdns        // Flushes DNS cache on Windows

C:\Windows\System32\drivers\etc\hosts
Add line 192.168.6.212 www.yahoo.com // Visiting yahoo.com will direct you to 192.168.2.212



// 9 May 2016

snmp // Simple Network Management Protocol on Port 161
snmpwalk -v 2c -c public 192.168.6.211      // Scans 192.168.6.211 with snmpwalk, version 2c, community passphrase "public"

fping // Just like ping, except pings multiple hosts at the same time
fping –g 192.168.6.211 192.168.6.214        // Generate an inclusive list of ip addresses from 192.168.6.211 - 192.168.6.214

hping3 // Crafts any sort of packet and sends to hosts
hping3 –c 1 –S 192.168.10.50 // Sends a SYN packet count of 1 to 192.168.10.50

nmap –sS 192.168.10.100     // TCP SYN scan, scans with SYN packets
nmap -sT 192.168.10.100     // TCP connect() scan
nmap -sV --version-intensity 9 -p 8075 192.168.10.100   // Deep scan for unknown service on a specific port 8075, max intensity of 9 (all protocols in existence)
nmap -O 192.168.10.100      // OS scan
// More Below

// Banner Grabbing with Telnet
telnet 192.168.6.212 80
OPTIONS / HTTP/1.1          // Type this while waiting for host
HOST: 127.0.0.1             // And press enter again
// Server banner will return, showing it is a apache, etc server

nc 192.168.6.212 80
OPTIONS / HTTP/1.1
HOST: 127.0.0.1



// 16 May 2016

// Finding IP of a host from a DNS server
dig google.com							// IP found in "ANSWER SECTION"
dig –t ns nintendo.com					// Retrieves more information about name servers of the host
dig -t mx nintendo.com					// Retreives more information about mail servers of the host
dig @192.168.6.211 server.example.com	// Find ip of server.example.com from DNS server 192.168.6.211 
host server.example.com 192.168.6.211	// ^
host 205.166.76.2						// Looks for hostname for this IP
nslookup								// Windows

// DNS Zone Transfer
dig @192.168.6.211 example.com axfr		// Lists all DNS records of a certain DNS server

// Paros (used for trapping HTTP packets by acting as a proxy)
// Set up proxy on browser, point to localhost:8080
// Browse websites
// Paros captures Requests/Responses/Banners

// Trap > Tick Trap Response // Traps HTTP responses to your browser, thus you can read it, make it continue or drop it



// 18 May 2016

// Nmap Scans that Identifies TCP Ports
-sS		- TCP SYN Scan (Stealthy, TCP half connection, no logging) (default)
-sT		- TCP connect() Scan (Not Stealthy, establishes a full TCP connection)
-sF		- TCP FIN Scan (Stealthy, 1 FIN packet sent and expect 1 RST to be received)
  -sF	- Xmas Tree Scan
  -sN	- Null Scan
-sA		- TCP ACK Scan (for firewall detection)
-sI		- Idlescan
-b		- FTP Bounce Attack

// Nmap Scans that Do Not Identify TCP Ports
-sU		- UDP Scan, one and only
-sW		- Window Scan
-sP		- Pint Scan (Simple way of checking for live hosts)
-sV		- Version Scan of Services (--version-intensity [0-9])
-sO		- IP Scan

// Nmap Useful Commands
nmap -O [ip]									// Scans for operating system running (use --osscan-guess for more aggressive scan)
nmap -sV --version-intensity 9 [ip] -p [ports]	// Scans for unknown services on unknown ports with max intensity, ports optional
nmap -A	[ip]									// Aggressive scan, includes OS detection and service scan (-O and -sV)
nmap -sS -sU -p- [ip]							// Scans all TCP and UDP ports
nmap -sn [ip range]								// Scans a network for online hosts
nmap -sL [ip range]								// Scans a network for all hostnames (or single target)
nmap -F -T4 [ip]								// Fast, quick and dirty scan for open ports
nmap --script=http-title [ip]					// Gathers HTTP page titles on web servers
nmap --script=http-headers [ip]					// Gathers HTTP headers on web servers (banner grabbing) (faster than the other banner grabbing methods)
nmap --script=http-enum [ip]					// Gathers HTTP directories on web servers

/*	Optional flags, add to taste:
	-T4					// Scan speed, T4 produces faster, more aggressive scans, -T5 is too insanely fast)
	-v					// Verbose mode
	--script=[script]	// List of scripts here: locate nse | grep script 

/*	Port Scanning to find open/closed ports
	-sS port scan sends a [SYN] packet to target, trying to establish a 3-way handshake (half 3-way handshake), stealthy
	If port open, target sends back [SYN, ACK], thinking that scanner is trying to est a legit connection, showing that the port is accepting connections and is open, then scanner resets it with [RST], and does NOT complete the handshake (unlike -sT scan)
	If port close, target sends back [SYN, RST], indicating that the target is not accepting connections  */

/*	Exercise 2
	When the system at 192.168.6.211 receives an illegal or unexpected packet, it will replay with an ICMP Destination Unreachable packet
	When you scan the other system 192.168.6.212, if you don't get any response, the port is probably blocked by firewall.
	
	Exercise 4
	UDP Port 53 is open on 192.168.6.211  */

// Ping Sweeps with Forged Source IP Address
hping3 –c 2 –-icmp –a 192.168.20.20 192.168.10.100	// Sends 2 forged ICMP ping packets to 10.100 with the fake address of 20.20




